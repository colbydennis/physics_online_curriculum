p <- c(1,2,3,4,5,6)
plot(p)
y <- c(1,1,1,1,1,1)
plot(p,y)
plot(p, numeric(length(p)))
p <- c(1:10)
plot(p, numeric(length(p)))
?vectorplot
p <- (1:10)
y <- integer(10)
plot(p,y, main="Constant velocity car")
y[4] <- 2
plot(p,y, main="Constant velocity car")
plot(p,y, main="Constant velocity car", cph="3")
?plot
plot(p,y, main="Constant velocity car", pch="3")
plot(p,y, main="Constant velocity car", pch="3")
y1 <- integer(10)
y2 <- integer(10,0.1)
y2 <- integer(10)
y2 <- y2 + 0.1
?points
p1 <- plot(p, y1, pch=20)
p2 <- plot(p, y2, pch=y2)
p2 <- plot(p, y2, pch="y2")
p2 <- plot(p, y2, pch=20, color="red")
time <- c(0:0.1:10)
time <- c(0:100)
time <- time*0.1
time(length)
length(time)
time[101]
car1_position <- time * 0.3
car2_position <- time * (-0.1) + 3
line1 <- plot(time, car1_position)
line2 <- plot(time, car2_position)
plot(line1)
plot(time, car_1position)
plot(time, car1_position)
points(car2_position)
car2_position <- time * (-0.2) + 2
points(car2_position)
plot(time, car2_position)
plot(time, car1_position, car2_position)
plot(time, car1_position)
points(car2_position, col=2)
points(time, car2_position, col=2)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
#install.packages("ggplot2")
library(ggplot2)
#install.packages("ggplot2")
library(ggplot)
#install.packages("ggplot2")
library(ggplot2)
install.packages("pillar")
#install.packages("ggplot2")
library(ggplot2)
time <- c(1:100) * 0.1
car1_position <- time * 0.3
car2_ position <- (time * (-0.2)) + 2
car2_ position <- (time * -0.2) + 2
car2_ position <- time * (-0.2) + 2
car2_ position <- -0.2 * time  + 2
car2_ position <- time * - 0.2
car2_ position <- time * -0.2
#install.packages("ggplot2")
library(ggplot2)
time <- c(1:100) * 0.1
car1_position <- time * 0.3
car2_ position <- time * -0.2
car1_position_final <- time * 0.1 - 2.8
car2_position_final <- time * 0.1 - 3
time * -1
car2_ position <- time * -1
car2_position <- time * -0.2
car2_position <- time * -0.2 + 2
car1_p <- num(101)
car1_p <- numeric(101)
car1_p <- numeric(101)
car2_p <- numeric(101)
car1_v <- numeric(101)
car2_v <- numeric(101)
car1_p[:39] <- car1_position[:39]
car1_p[1:39] <- car1_position[1:39]
car1_p_f[40:101] <- car1_position_final[40:101]
car1_p[40:101] <- car1_position_final[40:101]
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
length(car1_p)
length(time)
time <- c(0:100) * 0.1
car1_position <- time * 0.3
car2_position <- time * -0.2 + 2
car1_position_final <- time * 0.1 - 2.8
car2_position_final <- time * 0.1 - 3
car1_p <- numeric(101)
car2_p <- numeric(101)
car1_v <- numeric(101)
car2_v <- numeric(101)
car1_p[1:39] <- car1_position[1:39]
car1_p[40:101] <- car1_position_final[40:101]
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
car1_position_final <- time * 0.1 - 0.8
car2_position_final <- time * 0.1 - 1
car1_p[40:101] <- car1_position_final[40:101]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
car1_position_final <- time * 0.1 + 0.8
car2_position_final <- time * 0.1 + 1
car1_p[40:101] <- car1_position_final[40:101]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
car1_position_final <- time * 0.1 + 0.7
car2_position_final <- time * 0.1 + 0.9
car1_position_final <- time * 0.1 + 0.7
car2_position_final <- time * 0.1 + 0.8
car1_p[40:101] <- car1_position_final[40:101]
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
car1_position_final <- time * 0.1 + 0.8
car2_position_final <- time * 0.1 + 0.9
car1_p <- numeric(101)
car2_p <- numeric(101)
car1_v <- numeric(101)
car2_v <- numeric(101)
car1_p[1:39] <- car1_position[1:39]
car1_p[40:101] <- car1_position_final[40:101]
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
car1_position_final <- time * 0.1 + 0.75
car1_p[40:101] <- car1_position_final[40:101]
plot(time,car1_p)
car2_position_final <- time * 0.1 + 0.8
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
points(time,car2_p, col="2")
car2_position <- time * -0.2 + 1.9
car2_p[1:39] <- car2_position[1:39]
points(time,car2_p, col="2")
#install.packages("ggplot2")
library(ggplot2)
time <- c(0:100) * 0.1
car1_position <- time * 0.3
car2_position <- time * -0.2 + 1.9
car1_position_final <- time * 0.1 + 0.75
car2_position_final <- time * 0.1 + 0.8
car1_p <- numeric(101)
car2_p <- numeric(101)
car1_v <- numeric(101)
car2_v <- numeric(101)
car1_p[1:39] <- car1_position[1:39]
car1_p[40:101] <- car1_position_final[40:101]
car2_p[1:39] <- car2_position[1:39]
car2_p[40:101] <- car2_position_final[40:101]
plot(time,car1_p)
points(time,car2_p, col="2")
c1_v[1:39] <- 0.3
car1_v <- numeric(101)
car2_v <- numeric(101)
car1_v[1:39] <- 0.3
car2_v[1:39] <- -0.2
car1_v[40:101] <- 0.1
car2_v[40:101] <- 0.1
plot(time,car1_p, main="Position vs Time", xlab="Time(s)", ylab="Position(m)")
points(time,car2_p, col="2")
plot(time, car1_v, main="Velocity vs Time", xlab="Time(s)", ylab="Velocity(m/s)")
points(time, car2_v, col="2")
df <- data.frame(time, car1_p, car2_p, car1_v, car2_v)
my_names <- c("Time (s)", "Car 1 Position (m)", "Car 2 Position (m)",
"Car 1 Velocity (m/s)", "Car 2 Velocity (m/s)")
names(df) <- my_names
View(df)
write.csv(df, "two_car_motion.csv")
getwd()
setwd("C:\Users\Colby\OneDrive\Documents\GitHub\physics_online_curriculum")
setwd("Users\Colby\OneDrive\Documents\GitHub\physics_online_curriculum")
setwd("Users\Colby\OneDrive\Documents\GitHub\physics_online_curriculum")
setwd("C:/Users/Colby/OneDrive/Documents/GitHub/physics_online_curriculum")
?dnorm
source('~/GitHub/physics_online_curriculum/r_create.R')
time <- c(0:100)
force <- dnorm(time, 30, 5)
plot(time, force)
force <- dnorm(time, 30, 5) * 10000
plot(time, force)
force <- dnorm(time, 30, 5) * 10050
force <- (dnorm(time, 30, 5) * 10050) - 50
for (i in length(force)) {
if (force[i] < 0) {
force[i] <- 0
}
}
for (i in force) {
if (force[i] < 0) {
force[i] <- 0
}
}
plot(time, force)
force <- (dnorm(time, 30, 5) * 10050) - 50
for (i in force) {
if (force < 0) {
force <- 0
}
}
force[force < 0] <- 0
force <- (dnorm(time, 30, 5) * 10050) - 50
force[force < 0] <- 0
plot(time, force)
time <- c(0:75)
force <- (dnorm(time, 30, 5) * 10050) - 50
force[force < 0] <- 0
plot(time, force)
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
grid=T)
plot?
?plot
?plot
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
pch = 20, col="blue")
grid(10, 100)
grid()
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
pch = 20, col="blue")
grid()
grid(7, 7)
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
pch = 20, col="blue")
grid(7, 7)
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
pch = 20, col="blue")
grid()
velocity <- numeric(76)
velocity <- numeric(length(force))
i <- 2
momentum <- numeric(length(force))
while (i <= length(momentum)) {
momentum[i] <- momentum[i-1] + force[i]*0.001
i <- i + 1
}
vecocity <- momentum / 0.43 # 0.43 is mass of soccer ball
plot(time, velocity)
print(momentum)
velocity <- momentum / 0.43 # 0.43 is mass of soccer ball
plot(time, velocity)
plot(time, velocity, main="Velocity vs Time", xlab="Time (ms)",
ylab="Velocity (m/s)", pch=20, col="blue")
plot(time, velocity, main="Velocity vs Time", xlab="Time (ms)",
ylab="Velocity (m/s)", pch=20, col="blue", sub="0.46 kg Soccer Ball")
time <- c(0:75)
time <- c(0:75)
force <- (dnorm(time, 30, 5) * 10050) - 50
force[force < 0] <- 0
plot(time, force, main="Force vs. Time", xlab="Time (ms)", ylab="Force (N)",
pch = 20, col="blue", sub="0.46 kg Soccer Ball")
grid()
i <- 2
momentum <- numeric(length(force))
while (i <= length(momentum)) {
momentum[i] <- momentum[i-1] + force[i]*0.001
i <- i + 1
}
velocity <- momentum / 0.43 # 0.43 is mass of soccer ball
plot(time, velocity, main="Velocity vs Time", xlab="Time (ms)",
ylab="Velocity (m/s)", pch=20, col="blue", sub="0.46 kg Soccer Ball")
?random
names(df) <- c("Time (ms)", "Force (N)", "Velocity (m/s)")
df <- data.frame(time, force, velocity)
names(df) <- c("Time (ms)", "Force (N)", "Velocity (m/s)")
View(df)
ping_pong_v <- momentum / 0.0027 # 2.7 g mass of ping pong ball
tennis_v <- momentum / 0.0577
base_v <- momentum /0.145
soccer_v <- momentum / 0.43 # 0.43 is mass of soccer ball
basket_v <- momentum / 0.625
bowling_v <- momentum / 5
ping_pong_v <- momentum / 0.0027 # 2.7 g mass of ping pong ball
tennis_v <- momentum / 0.0577
base_v <- momentum /0.145
soccer_v <- momentum / 0.43 # 0.43 is mass of soccer ball
basket_v <- momentum / 0.625
bowling_v <- momentum / 5
df <- data.frame(time, force, ping_pong_v, tennis_v, base_v, soccer_v,
basket_v, bowling_v)
names(df) <- c("Time (ms)", "Force (N)",
"Velocity of a Ping Pong Ball (m/s)",
"Velocity of a Tennis Ball (m/s)",
"Velocity of a Baseall (m/s)",
"Velocity of a Soccer Ball (m/s)",
"Velocity of a Basket Ball (m/s)",
"Velocity of a Bowling Ball (m/s)")
write.csv(df, "sport_ball.csv")
work <- read.csv("https://bit.ly/dennis_ret", header=T)
View(work)
